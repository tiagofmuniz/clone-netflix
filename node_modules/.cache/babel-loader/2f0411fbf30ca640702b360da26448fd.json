{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\projects\\\\clone-netflix\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport './App.css';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n    };\n\n    loadAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [featuredData && /*#__PURE__*/_jsxDEV(FeaturedMovie, {\n      item: featuredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}, \"/mp4Zi9ytVHS+i5YC/5I14s5PB0=\");","map":{"version":3,"sources":["C:/Users/USUARIO/projects/clone-netflix/src/App.js"],"names":["React","useEffect","useState","Tmdb","MovieRow","FeaturedMovie","movieList","setMovieList","featuredData","setFeaturedData","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","map","item","key","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,kBAAe,MAAM;AAAA;;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMS,OAAO,GAAG,YAAU;AAExB,UAAIC,IAAI,GAAG,MAAMR,IAAI,CAACS,WAAL,EAAjB;AACAL,MAAAA,YAAY,CAACI,IAAD,CAAZ;AAEA,UAAIE,SAAS,GAAGF,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAEA,CAAC,CAACC,IAAF,KAAW,WAA1B,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAoC,CAArD,CAAX,CAAnB;AAED,KARD;;AASAb,IAAAA,OAAO;AAER,GAZQ,EAYN,EAZM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eAEGF,YAAY,iBACX,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAME;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,gBACGF,SAAS,CAACkB,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,kBACb,QAAC,QAAD;AAAoB,QAAA,KAAK,EAAED,IAAI,CAACE,KAAhC;AAAuC,QAAA,KAAK,EAAEF,IAAI,CAACJ;AAAnD,SAAeK,GAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtCD","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport './App.css';\nimport FeaturedMovie from './components/FeaturedMovie';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n\n  useEffect(()=> {\n    const loadAll = async ()=>{\n\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n\n    }\n    loadAll();\n\n  }, []);\n\n\n \n  return(\n    <div className=\"page\">\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData}/>\n        }\n\n      <section className=\"lists\">\n        {movieList.map((item, key)=>(\n          <MovieRow key={key} title={item.title} items={item.items}/>\n \n\n        ))}\n      </section>\n\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}